- Title = <h1>TITLE<!h1>
- Change color style of text = <h1 style="color:red">TEXT WILL BE RED</h1>
- Paragraph = <p>WRITE YOUR TEXT<!p>
- Make invisible text <!-- YOUR INVISIBLE CODE OR TEXT -->
- Create CSS style element = e.g. = <style> h2 {color: red;} </style> <!-- means all text in h2 will be red / curly braces is done by option/alt 8 and 9 -->
- Use a CSS Class to Style an Element = <style> .red-text {color: red;} </style>
  - THEN = e.g. = <h2 class="red-text">TEXT WILL BE RED</h2>
- Change the Font Size of an Element = <style> p {font-size: 16px;} </style> <!-- attributed to all p -->
- Set the Font Family of an Element = For example, if you wanted to set your h2 element's font to Sans-serif, you would use the following CSS: h2 {font-family: Sans-serif;}
- Add an image = <img src="https://THE LINK TO THE IMAGE" alt="DESCRIPTION">
- Size your Images = CSS has a property called width that controls an element's width. Just like with fonts, we'll use px (pixels) to specify the image's width.= For example, if we wanted to create a CSS class called `larger-image` that gave HTML elements a width of 500 pixels, we'd use: <style> .larger-image {width: 500px;} </style>
- Add Borders Around your Elements = CSS borders have properties like style, color and width = For example, if we wanted to create a red, 5 pixel border around an HTML element, we could use this class: <style> .thin-red-border {border-color: red; border-width: 5px; border-style: solid;} </style> = Remember that you can apply multiple classes to an element by separating each class with a space within its class attribute. For example: <img class="class1 class2">
- Add Rounded Corners with a Border Radius = We can round out those corners with a CSS property called border-radius = You can specify a border-radius with pixels = <style> .border-radius {border-radius: 10px;} </style>
- Make Circular Images with a Border Radius = In addition to pixels, you can also specify a border-radius using a percentage = <style> .border-radius {border-radius: 50%;} </style>
- Link to External Pages with Anchor Elements = a elements, also known as anchor elements, are used to link to content outside of the current page = <p> <a href="http://freecodecamp.org"> link to Free Code Camp</a> </p>
- Nest an Anchor Element within a Paragraph = Nesting just means putting one element inside of another element = <p>Click here for <a href="http://www.freecatphotoapp.com">cat photos</a>.</p>
- Make Dead Links using the Hash Symbol = Sometimes you want to add a elements to your website before you know where they will link. This is also handy when you're changing the behavior of a link using jQuery, which we'll learn about later. Replace the value of your a element's href attribute with a #, also known as a hash symbol, to turn it into a dead link = <p>Click here for <a href="#">cat photos</a>.</p>
- Turn an Image into a Link = You can make elements into links by nesting them within an a element. Nest your image within an a element. Here's an example: <a href="#"><img src="https://bit.ly/fcc-running-cats" alt="Three kittens running towards the camera. "></a> Remember to use # as your a element's href property in order to turn it into a dead link.
- Create a Bulleted Unordered List = HTML has a special element for creating unordered lists, or bullet point-style lists. Unordered lists start with a <ul> element. Then they contain some number of <li> elements. For example: <ul> <li>milk</li>
  <li>cheese</li></ul> = would create a bullet point-style list of "milk" and "cheese".
- Create an Ordered List = HTML has a special element for creating ordered lists, or numbered-style lists. Ordered lists start with a <ol> element. Then they contain some number of <li> elements. For example: <ol> <li>Garfield</li> <li>Sylvester</li> </ol> = would create a numbered list of "Garfield" and "Sylvester".
- Create a Text Field = Now let's create a web form. Text inputs are a convenient way to get input from your user. You can create one like this: <input type="text"> Note that input elements are self-closing.
- Add Placeholder Text to a Text Field = Your placeholder text is what appears in your text input before your user has input anything. You can create placeholder text like so: <input type="text" placeholder="this is placeholder text">
- Create a Form Element = You can build web forms that actually submit data to a server using nothing more than pure HTML. You can do this by specifying an action on your form element.For example: <form action="/url-where-you-want-to-submit-form-data"></form>
- Add a Submit Button to a Form = Let's add a submit button to your form. Clicking this button will send the data from your form to the URL you specified with your form's action attribute. Here's an example submit button: <button type="submit">this button submits the form</button>
- Use HTML5 to Require a Field = You can require specific form fields so that your user will not be able to submit your form until he or she has filled them out. For example, if you wanted to make a text input field required, you can just add the word required within your input element, you would use: <input type="text" required>
- Create a Set of Radio Buttons = You can use radio buttons for questions where you want the user to only give you one answer. Radio buttons are a type of input. Each of your radio buttons should be nested within its own label element. All related radio buttons should have the same name attribute. Here's an example of a radio button: <label><input type="radio" name="indoor-outdoor"> Indoor</label>
- Create a Set of Checkboxes = Forms commonly use checkboxes for questions that may have more than one answer. Checkboxes are a type of input. Each of your checkboxes should be nested within its own label element. All related checkbox inputs should have the same name attribute. Here's an example of a checkbox: <label><input type="checkbox" name="personality"> Loving</label>
- Check Radio Buttons and Checkboxes by Default = You can set a checkbox or radio button to be checked by default using the checked attribute. To do this, just add the word "checked" to the inside of an input element. For example: <input type="radio" name="test-name" checked>
- Nest Many Elements within a Single Div Element = The div element, also known as a division element, is a general purpose container for other elements. The div element is probably the most commonly used HTML element of all. It's useful for passing the CSS of its own class declarations down to all the elements that it contains. Just like any other non-self-closing element, you can open a div element with <div> and close it on another line with </div>.
- Give a Background Color to a Div Element = You can set an element's background color with the background-color property. For example, if you wanted an element's background color to be green, you'd put this within your style element: .green-background {background-color: green;}
- 




